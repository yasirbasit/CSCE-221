#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble

\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "times" "default"
\font_sans "helvet" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\headheight 0cm
\headsep 0cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
CSCE 221 Cover Page
\begin_inset Newline newline
\end_inset

 Program Assignment # 4
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 
\end_layout

\begin_layout Author
First Name:
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Rong
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Last Name: 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Xu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

UIN:
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

928009312
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Date
User Name: 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Abby-xu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

E-mail address:
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

rongx0915@tamu.edu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more in the Aggie Honor System Office 
\begin_inset CommandInset href
LatexCommand href
target "http://aggiehonor.tamu.edu/"
literal "false"

\end_inset


\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed material
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Date
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
I certify that I have listed all the sources that I used to develop the
 solutions/code to the submitted work.
\end_layout

\begin_layout Quotation
“
\emph on
On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work.
\emph default
” 
\end_layout

\begin_layout Date
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name (signature)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Rong
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Xu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

2020/11/12
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Title
The Programming Assignment Report Instructions
\begin_inset Newline newline
\end_inset

CSCE 221
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

 
\end_layout

\begin_layout Enumerate
The description of an assignment problem.
\end_layout

\begin_deeper
\begin_layout Enumerate
This lab includes three parts.
 
\end_layout

\begin_layout Enumerate
Part 1: Students will represent the derected graph based on a input txt
 file.
 Bascially, students will read each line of the inout file, then build a
 graph based on the file.
 (the input file will present each nodes in the beginning of each line and
 the rest nodes are the adjacent nodes).
 After storing the nodes and build the graph, the program will also present
 the graph just built.
\end_layout

\begin_layout Enumerate
Part 2: Student will use the topological sorting to sort the graph just
 built and output the topological ordering.
 If the graph cannot be present as the topological order and the program
 will print the message 
\begin_inset Quotes eld
\end_inset

Cycle Detected.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
Part 3: Students will use four test cases to test the program.
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
The description of data structures and algorithms used to solve the problem.
\end_layout

\begin_deeper
\begin_layout Enumerate
Provide definitions of data structures for graph
\end_layout

\begin_deeper
\begin_layout Enumerate
For the private member, I used the unordered_map named node_set and vector
 named out_node.
 For the unordered _map I used the c++ standard library.
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Provide definitions of data structures for topological sorting.
\end_layout

\begin_deeper
\begin_layout Enumerate
Forthe topological sorting, I implement it based on the graph I just built.
 I also used the queue and vector to store the data I need.
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Describe algorithms used to solve the problem.
\end_layout

\begin_deeper
\begin_layout Enumerate
graph
\end_layout

\begin_deeper
\begin_layout Enumerate
build-graph( O(n+m)): for this function, we are going read the data from
 the input file and then store the data in our unordered_map(node_sets).
 For each line, we will first read the label and then build a vertex object
 based on that label.
 Then we keep reading the data and store them into a vector, at last we
 can make a pair of the label and the vector of adjcent nodes then insert
 the vertex into our unordered_map.
 The running time of this function is O(n*m) where the n is the number of
 vertex and the m is the number of the nodes in the adjcent vector.
 
\end_layout

\begin_layout Enumerate
display-graph (O(n+m)): for this function, since I make a vector called
 input_order when I insert the pair.
 So for this function, I make a for loop to go over each pair in the unordered_m
ap and then print them out.
 On the other hand, although I stored the label into the vector instead
 of the vertex, when I use the helper function 
\begin_inset Quotes eld
\end_inset

.at()
\begin_inset Quotes erd
\end_inset

.
 By using this function I will get the vertex in the unorder_map for running
 time of O(1), and if the program cannot find the vertex, it will throw
 an exception.
 Besides, for outputing each vertex, I override the 
\begin_inset Quotes eld
\end_inset

<<
\begin_inset Quotes erd
\end_inset

 sign for output the nodes in the adjcent list which will cost m times for
 each vertex.
\end_layout

\begin_layout Enumerate
.at() (O(1)): for this function, since I used the unordered_map which is
 implemented by hasing table, tbe total running time will just O(1).
 However, if the hash code function is not good then, the time complexity
 will be O(n).
 [I think in my function, the code function is good so the time complexity
 will just O(1)...]
\end_layout

\begin_layout Enumerate
size() (O(n)): for this function I used the code provided by the instruction.
 I think the time complexity is O(n) since we use the for loop to go over
 every vertex in the unordered_map node_sets.
\end_layout

\end_deeper
\begin_layout Enumerate
topological sorting
\end_layout

\begin_deeper
\begin_layout Enumerate
compute_indegree() (O(n+m)): for this function, we will goover each vertex
 and the adjcent list for each vertex.
 In thi scase, the n is the number of vertex in the unordered_map and the
 m is the number of nodes in each adjcent list.
 Remark: the m for each node is different, and I change the code in the
 struct of vertex from 
\begin_inset Quotes eld
\end_inset

int indegree;
\begin_inset Quotes erd
\end_inset

 to 
\begin_inset Quotes eld
\end_inset

int indegree = 0;
\begin_inset Quotes erd
\end_inset

.
 The outer for loop will be executed n number of times and the inner for
 loop will be executed m number of times, Thus overall time complexity is
 O(n+m).
\end_layout

\begin_layout Enumerate
topological_sort() (O(n+m)): for this function, as before, we will assume
 the graph is already read into an adjaceny list and the indegrees are computed
 and stored by compute_indegree() funcion.
 The time to perform this algorithm is O(|n|+|m|).
 This apparent when one realized that the body of the for loop is executed
 at most once per edge.
 For this function, we will use the queue data structure to store the vertex
 with indegree of 0.
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Analyze the algorithms according to assignment requirements.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
remove_min()
\end_layout

\begin_deeper
\begin_layout Enumerate
Sorted MPQ(Linkedlist): O(1) —since the linkedlist has already been sorted
 when we insert the data, so we can just remove the first element in the
 linked list and chenge the header pointer to the second element.
\end_layout

\begin_layout Enumerate
unsorted MPQ(Vector): O(n) — since the elements in the vector aren't sorted
 so that if we want to remove the min value, we need to find the min value
 first, which will need O(n) times to run.
 Then when we remove the element, we will need O(n) time.
 So the total will be O(n) + O(n) = O(n)
\end_layout

\begin_layout Enumerate
Binary heap: O(log n) — When we remove the smallest element in the vector,
 it has same time complexcity of sorted MPQ, so basically we jsut remove
 the first element.
 However, we have to rearrange the element since we are using binary method
 to implement this MPQ.
 The data structure will be similar to binary tree.
 So in order to let the max element (after we delete the first element we
 move the last element to the first position) 
\begin_inset Quotes eld
\end_inset

go odwn
\begin_inset Quotes erd
\end_inset

.
 Since we are using the binary method, so it will only take O(log n).
\end_layout

\end_deeper
\begin_layout Enumerate
min()
\end_layout

\begin_deeper
\begin_layout Enumerate
Sorted MPQ(Linkedlist): O(1) — Since the linkedlist is sorted when we insert
 the data, so we can just return the value of the first element.
\end_layout

\begin_layout Enumerate
unsorted MPQ(Vector): O(n) — Since the vector is unsotred, so if we wanna
 find the minmum value in the vector, we have to go over every elements
 in the vector, which will take O(n) time.
\end_layout

\begin_layout Enumerate
Binary heap: O(1) — similar to the linkedlist mentioned above, the vector
 in teh binary heap is sorted, so we can just return the first element in
 the vector.
\end_layout

\end_deeper
\begin_layout Enumerate
is_empty(): O(1) — for all three class, since we have a private member called
 size in the class to track the size of data structure.
 So inorder to check if the data struture has any element, we will just
 use the number in the size.
\end_layout

\begin_layout Enumerate
insert():
\end_layout

\begin_deeper
\begin_layout Enumerate
Sorted MPQ(Linkedlist): O(n) — Since we need to make sure when we insert
 the data into the linkedlist, we have to make sure the order.
 So everytime we insert a data, we will go over every element to check order
 and put the data at a right position.
\end_layout

\begin_layout Enumerate
Unsorted MPQ(vector): O(1) – We don't havr to check the order of elements
 so just oush the data at the last position of vector.
\end_layout

\begin_layout Enumerate
Binary heap: O(log n) — Since the order is matter in this data structure,
 we need to check every elements.
 However, since we use the binary heap method, so we can just check O(log
 n) times to make sure thr order.
 It's similar to the binary tree.
 So in this function, for insert the data into the vector, the running time
 id O(1), and we check the order will take O(log n) time.
 SO it's O(1) + O(log n) = O(log n).
\end_layout

\end_deeper
\begin_layout Enumerate
For the other two function in the binary heap, the complexicity is O(log
 n) for both of them.
 These two functions will go over the whole vector by using the similar
 way of binary tree.
 So the running time would usually be the 
\begin_inset Quotes eld
\end_inset

height
\begin_inset Quotes erd
\end_inset

 of the tree which will be log n.
 
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Give the best, worst, and average case input examples and runtime (bigO)
 for each implementation on sorting a given array.
\end_layout

\begin_deeper
\begin_layout Enumerate
Best case: O(n log n) — when the order of original array is in order, Ex:
 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
\end_layout

\begin_layout Enumerate
Worst case: O(n log n) — when the order of original array is reverse order,
 Ex: 10, 9, 8, 7, 6, 5, 4, 3, 2, 1
\end_layout

\begin_layout Enumerate
Average case: O(n log n) — when the order of original array is neither in
 order nor reverse order, Ex: 3, 2, 6, 4, 7, 5, 9, 1, 10, 8
\end_layout

\begin_layout Enumerate
Time complexity of heapify is O(Logn).
 Time complexity of createAndBuildHeap() is O(n).
 And in this case we are gonna use Minimum element as the 
\begin_inset Quotes eld
\end_inset

root
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
C++ organization and implementation of the problem solution.
\end_layout

\begin_deeper
\begin_layout Enumerate
See the mimir submission.
\end_layout

\end_deeper
\begin_layout Enumerate
Provide graphs and data tables of your CPU job simulation results.
 (Only input sizes of 4, 10, 100, and 1,000 required)
\end_layout

\begin_deeper
\begin_layout Enumerate
Screenshot of terminal:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Graphics
	filename /Users/abby/Desktop/Screen Shot 2020-11-04 at 4.54.20 PM.png
	scale 20

\end_inset


\begin_inset Graphics
	filename /Users/abby/Desktop/Screen Shot 2020-11-04 at 4.54.27 PM.png
	scale 20

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
data table and plot of results:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Graphics
	filename /Users/abby/Desktop/Screen Shot 2020-11-04 at 7.05.27 PM.png
	scale 30

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Graphics
	filename /Users/abby/Desktop/Screen Shot 2020-11-04 at 7.03.27 PM.png
	scale 60

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Graphics
	filename /Users/abby/Desktop/Screen Shot 2020-11-04 at 7.03.53 PM.png
	scale 40

\end_inset


\end_layout

\begin_layout Enumerate
I only used the data set of 4, 10, and 100 to plot since that would be more
 obvious.
\end_layout

\begin_layout Enumerate
From the plot, it is easy to show that the binary heap will be more efficiency
 than sorted than unsorted.
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
A user guide description how to navigate your program with the instructions
 how to: 
\end_layout

\begin_deeper
\begin_layout Enumerate
compile the program: makefile file
\begin_inset listings
lstparams "language=make,basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

all: cpujob-test heap-test sorted-test unsorted-test test
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

cpujob-test: cpu-job.h 	
\end_layout

\begin_layout Plain Layout

	g++ -std=c++11 cpu-job-main.cpp -o cpujob-test
\end_layout

\begin_layout Plain Layout

heap-test: MPQ.h BinaryHeapMPQ.h BinaryHeap.h 	
\end_layout

\begin_layout Plain Layout

	g++ -std=c++11 binaryheap-mpq-main.cpp -o heap-test
\end_layout

\begin_layout Plain Layout

sorted-test: MPQ.h SortedMPQ.h 	
\end_layout

\begin_layout Plain Layout

	g++ -std=c++11 sortedmpq-main.cpp -o sorted-test
\end_layout

\begin_layout Plain Layout

unsorted-test: MPQ.h UnsortedMPQ.h 	
\end_layout

\begin_layout Plain Layout

	g++ -std=c++11 unsortedmpq-main.cpp -o unsorted-test
\end_layout

\begin_layout Plain Layout

test: MPQ.h UnsortedMPQ.h SortedMPQ.h BinaryHeapMPQ.h BinaryHeap.h cpu-job.h 	
\end_layout

\begin_layout Plain Layout

	g++ -std=c++11 main.cpp -o test
\end_layout

\begin_layout Plain Layout

clean: 	
\end_layout

\begin_layout Plain Layout

	rm *test OutputFiles/*
\end_layout

\begin_layout Plain Layout

run: test 	
\end_layout

\begin_layout Plain Layout

	./test 
\end_layout

\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Enumerate
compile the program: specify the directory and file names, etc.
\begin_inset listings
lstparams "language=make,basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

» cd ./PA_4 
\end_layout

\begin_layout Plain Layout

» make clean 
\end_layout

\begin_layout Plain Layout

» make
\end_layout

\begin_layout Plain Layout

» ./test
\end_layout

\end_inset


\begin_inset VSpace vfill
\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Specifications and description of input and output formats and files 
\end_layout

\begin_deeper
\begin_layout Enumerate
The type of files: keyboard, text files, etc (if applicable).
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Input file: a list of data has three columns which are CPU ID, length and
 prior.
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
A file input format: when a program requires a sequence of input items,
 specify the number of items per line or a line termination.
 Provide a sample of a required input format.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Input file: input file should be an .txt file which have the format like
 this:
\end_layout

\begin_deeper
\begin_layout Enumerate
Test file for 
\begin_inset Quotes eld
\end_inset

SetSize10
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

7	7	8 
\end_layout

\begin_layout Plain Layout

1	2	11 
\end_layout

\begin_layout Plain Layout

6	2	15 
\end_layout

\begin_layout Plain Layout

3	8	3 
\end_layout

\begin_layout Plain Layout

2	10	-16 
\end_layout

\begin_layout Plain Layout

8	3	-3 
\end_layout

\begin_layout Plain Layout

4	7	-16 
\end_layout

\begin_layout Plain Layout

9	9	-3 
\end_layout

\begin_layout Plain Layout

10	9	-3 
\end_layout

\begin_layout Plain Layout

5	9	11
\end_layout

\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Discuss possible cases when your program could crash because of incorrect
 input (a wrong file name, strings instead of a number, or such cases when
 the program expects 10 items to read and it finds only 9.)
\end_layout

\begin_deeper
\begin_layout Enumerate
none.
\end_layout

\begin_layout Enumerate
no special case.
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Provide types of exceptions and their purpose in your program.
\end_layout

\begin_deeper
\begin_layout Enumerate
logical exceptions (such as deletion of an item from an empty container,
 etc.).
\end_layout

\begin_deeper
\begin_layout Enumerate
No logical error has been found in testing
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
runtime exception (such as division by 
\begin_inset Formula $0$
\end_inset

, etc.)
\end_layout

\begin_deeper
\begin_layout Enumerate
Empty MPQ will be excuted in a different way: throw an exception.
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Test your program for correctness using valid, invalid, and random inputs
 (e.g., insertion of an item at the beginning, at the end, or at a random
 place into a sorted vector).
 Include evidence of your testing, such as an output file or screen shots
 with an input and the corresponding output
\end_layout

\begin_deeper
\begin_layout Enumerate
no implementation of invalid input.
\end_layout

\begin_layout Enumerate
All tests passes.
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\end_body
\end_document
